# Model Configuration for Smart Parking System
# Cấu hình chi tiết cho các mô hình AI

# YOLOv8 Vehicle Detection
vehicle_detection:
  # Model settings
  model_name: "yolov8n"  # yolov8n, yolov8s, yolov8m, yolov8l, yolov8x
  model_path: "data/models/vehicle_yolov8.pt"
  pretrained_path: "yolov8n.pt"  # For initial training
  
  # Training parameters
  training:
    epochs: 100
    batch_size: 16
    image_size: 640
    learning_rate: 0.01
    momentum: 0.937
    weight_decay: 0.0005
    warmup_epochs: 3
    warmup_momentum: 0.8
    warmup_bias_lr: 0.1
    
  # Inference parameters
  inference:
    confidence_threshold: 0.5
    iou_threshold: 0.4
    max_detections: 1000
    agnostic_nms: false
    
  # Classes (COCO format)
  classes:
    0: "car"
    1: "truck" 
    2: "bus"
    3: "motorcycle"
    
  # Data augmentation
  augmentation:
    hsv_h: 0.015
    hsv_s: 0.7
    hsv_v: 0.4
    degrees: 0.0
    translate: 0.1
    scale: 0.5
    shear: 0.0
    perspective: 0.0
    flipud: 0.0
    fliplr: 0.5
    mosaic: 1.0
    mixup: 0.0

# License Plate Detection
license_plate_detection:
  # Model settings
  model_name: "yolov8n"
  model_path: "data/models/license_plate_yolov8.pt"
  pretrained_path: "yolov8n.pt"
  
  # Training parameters
  training:
    epochs: 150
    batch_size: 32
    image_size: 416
    learning_rate: 0.01
    
  # Inference parameters
  inference:
    confidence_threshold: 0.7
    iou_threshold: 0.3
    max_detections: 10
    
  # Classes
  classes:
    0: "license_plate"

# OCR Configuration
ocr:
  # Engine selection
  engine: "paddleocr"  # "paddleocr" or "easyocr"
  
  # PaddleOCR settings
  paddleocr:
    use_angle_cls: true
    lang: "vi"  # Vietnamese
    use_gpu: true
    show_log: false
    
  # EasyOCR settings  
  easyocr:
    gpu: true
    languages: ["vi", "en"]
    paragraph: false
    
  # Post-processing
  post_processing:
    min_confidence: 0.5
    min_text_length: 6
    max_text_length: 12
    allowed_chars: "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-."
    
  # Vietnamese license plate patterns
  patterns:
    - "^[0-9]{2}[A-Z]{1}-[0-9]{3}\\.[0-9]{2}$"  # 51A-123.45
    - "^[0-9]{2}[A-Z]{2}-[0-9]{3}\\.[0-9]{2}$"  # 51AB-123.45
    - "^[0-9]{2}[A-Z]{1}-[0-9]{4}$"             # 51A-1234

# Multi-Object Tracking (ByteTrack)
tracking:
  # ByteTrack parameters
  track_thresh: 0.5
  track_buffer: 30
  match_thresh: 0.8
  frame_rate: 30
  
  # Kalman filter
  kalman:
    std_weight_position: 1.0/20
    std_weight_velocity: 1.0/160
    
  # Association
  association:
    min_box_area: 10
    max_time_lost: 30
    
  # ID management
  id_management:
    max_id: 100000
    id_reuse_threshold: 1000

# Performance Optimization
optimization:
  # Model optimization
  tensorrt:
    enabled: false
    precision: "fp16"  # fp32, fp16, int8
    
  # ONNX export
  onnx:
    enabled: false
    opset_version: 11
    
  # Quantization
  quantization:
    enabled: false
    backend: "qnnpack"  # fbgemm, qnnpack
    
  # Pruning
  pruning:
    enabled: false
    sparsity: 0.3

# Hardware Configuration
hardware:
  # GPU settings
  gpu:
    device_id: 0
    memory_fraction: 0.8
    allow_growth: true
    
  # CPU settings
  cpu:
    num_threads: 4
    use_mkldnn: true
    
# Evaluation Metrics
evaluation:
  # Detection metrics
  detection:
    iou_thresholds: [0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95]
    area_ranges: [[0, 10000000000], [0, 1024], [1024, 9216], [9216, 10000000000]]
    max_detections: [1, 10, 100]
    
  # OCR metrics
  ocr:
    edit_distance_threshold: 2
    exact_match: true
    case_sensitive: false
    
  # Tracking metrics
  tracking:
    mot_metrics: ["MOTA", "MOTP", "IDF1", "MT", "ML", "FP", "FN", "IDS"]
    
# Dataset Configuration
dataset:
  # Training data split
  train_split: 0.8
  val_split: 0.15
  test_split: 0.05
  
  # Data paths
  paths:
    images: "data/raw/images"
    annotations: "data/annotations"
    train: "data/processed/train"
    val: "data/processed/val"
    test: "data/processed/test"
    
  # Annotation format
  annotation_format: "yolo"  # yolo, coco, pascal_voc
  
  # Class mapping
  class_mapping:
    vehicle_detection:
      car: 0
      truck: 1
      bus: 2
      motorcycle: 3
    license_plate:
      license_plate: 0
